config = (extends | import | from_import)* definition*

extends = DIRECTIVE ('from' STRING)? 'extends' paths | (LAMBDA_OPEN paths LAMBDA_CLOSE)
paths = (STRING ','?)+

import = 'import' dotted_import_as (',' dotted_import_as)* ','?
import_from = 'from' dotted 'import' import_as (',' import_as)* ','?
dotted = IDENTIFIER ('.' IDENTIFIER)*
import_as = IDENTIFIER (as IDENTIFIER)?
dotted_import_as = dotted (as IDENTIFIER)? // for now, this is not fully supported
// dotted imports must contain an 'as'

definition = IDENTIFIER '=' expression

expression = simpleBlock | (simpleBlock getAttribute tail) | (module tail)
simpleBLock = data (getAttribute | partial)*
getAttribute = '.' IDENTIFIER
partial = LAMBDA_OPEN params LAMBDA_CLOSE
tail = BLOCK_OPEN params BLOCK_CLOSE

params = DIRECTIVE 'lazy'? (definition ','?)*

data = module | IDENTIFIER | object | array | STRING | NUMBER | 'null' | 'false' | 'true'
module = IDENTIFIER ':' IDENTIFIER partial?
object = '{' (STRING ':' expression ','?)* '}'
array = '[' (expression ','?)* ']'

STRING = r'''(\"\"\"|\'\'\'|\"|\')((?<!\\)(\\\\)*\\\1]|.)*?\1''' // with the S flag
NUMBER = r'-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?'
IDENTIFIER = r'[^\d\W]\w*'

DIRECTIVE = '@'
LAMBDA_OPEN = '('
LAMBDA_CLOSE = ')'
BLOCK_OPEN = <indent up>
BLOCK_CLOSE = <indent down>
COMMENT = r'//.*\n'

// inside `array`, `object` and `partial` the indentation has no effect