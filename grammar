config = importWholeConfig* partialImport* definition*

importWholeConfig = importStr | importStarred
importStr = ('from' STRING)? 'import' paths | (PAR_OPEN paths PAR_CLOSE)
importStarred = 'from' (IDENTIFIER | '.')? '.' dotted 'import' '*'
paths = (STRING ','?)+

partialImport = importSimple | importFrom | importFromConfig
importSimple = 'import' dotted_import_as (',' dotted_import_as)*
importFrom = 'from' dotted 'import' many_import_as
importFromConfig = 'from' ('.')? '.' dotted 'import' many_import_as

dotted = IDENTIFIER ('.' IDENTIFIER)*
import_as = IDENTIFIER (as IDENTIFIER)?
many_import_as = import_as (',' import_as)*
dotted_import_as = dotted (as IDENTIFIER)?

definition = IDENTIFIER '=' expression

expression = data (getAttribute | call | getItem)*
getItem = '[' expression (',' expression)* ','? ']'
getAttribute = '.' IDENTIFIER
call = PAR_OPEN params PAR_CLOSE
params = LAZY? (positional | keyword | (positional ',' keyword) ','?)?
positional = '*'? expression (',' '*'? expression)*
keyword = definition (',' definition)*

data = lambda | dictionary | array | IDENTIFIER | STRING | NUMBER | 'None' | 'False' | 'True'
dictionary = '{' (pair (',' pair)* ','?)? '}'
pair = expression ':' expression
array = '[' (expression (',' expression)* ','?)? ']'
# TODO: add varargs and kwargs
lambda = 'lambda' (IDENTIFIER (',' IDENTIFIER)*)? ':' expression

// this is an approximate regex. the true one is simply imported from `tokenize`
STRING = r'''(\"\"\"|\'\'\'|\"|\')((?<!\\)(\\\\)*\\\1]|.)*?\1'''
NUMBER = r'-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?'

IDENTIFIER = r'[^\d\W]\w*'
PAR_OPEN = '('
PAR_CLOSE = ')'
LAZY = '#\s*lazy\s*$'
COMMENT = r'#.*$'
